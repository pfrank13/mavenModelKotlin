package org.sonatype.maven.polyglot.kotlin

/**
 * @author pfrank
 */
/*
  Top Level Non Deprecated Model fields.  The model classes of Maven are generated by Modello at build time
  in the maven-model submodule of the maven project.  There is a github mirror here: https://github.com/apache/maven.git
 */

/*
private java.util.List<String> modules;
private DistributionManagement distributionManagement;
  private DeploymentRepository repository;
  private DeploymentRepository snapshotRepository;
  private Site site;
  private String downloadUrl;
  private Relocation relocation;
  private String status;
  private java.util.Map<Object, InputLocation> locations;

private java.util.Properties properties;
private DependencyManagement dependencyManagement;
private java.util.List<Dependency> dependencies;
private java.util.List<Repository> repositories;
private java.util.List<Repository> pluginRepositories;
private Reporting reporting;
private java.util.Map<Object, InputLocation> locations;
private String modelVersion;
private Parent parent;
private String groupId;
private String artifactId;
private String version;
rivate String packaging = "jar";
private String name;
private String description;
private String url;
private String inceptionYear;
private Organization organization;
private java.util.List<License> licenses;
private java.util.List<Developer> developers;
private java.util.List<Contributor> contributors;
private java.util.List<MailingList> mailingLists;
private Prerequisites prerequisites;
private Scm scm;
private IssueManagement issueManagement;
private CiManagement ciManagement;
private Build build;
private java.util.List<Profile> profiles;
private String modelEncoding = "UTF-8";
 */

class DistributionManagement{
  lateinit var downloadUrl: String

  fun downloadUrl(downloadUrl: String){
    this.downloadUrl = downloadUrl
  }
}

class Project{
  lateinit var modules: List<String>
  lateinit var distributionManagement: DistributionManagement

  fun modules(modules: List<String>){
    this.modules = modules
  }

  fun distributionManagement(distributionManagementLamda: DistributionManagement.() -> Unit) {
    this.distributionManagement = DistributionManagement()
    distributionManagement.distributionManagementLamda()
  }
}

fun project (projectLambda: Project.() -> Unit): Project{
  val project = Project()
  project.projectLambda()
  return project
}

fun main(args : Array<String>) {
  val myProject = project{
    modules(listOf("foo", "bar"))
    distributionManagement {
      downloadUrl("http://www.example.com/download")
    }
  }

  println(myProject.modules.size)
  println(myProject.distributionManagement.downloadUrl == ("http://www.example.com/download"))
}